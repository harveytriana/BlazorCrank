@page "/callback-sample"
@using System.Text
@implements IDisposable

<h1>Native Dependencies - Callbacks</h1>
<hr />
<pre>@echo</pre>

@code {
    string echo = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await Echo("Try C++ Callback...");
        await Task.Delay(200);

        CallbackExperiment.Echo += Echo;

        CallbackExperiment.ExecutePrompts();
    }

    async Task Echo(string? message = null)
    {
        Console.WriteLine(message);

        if (message is null)
            echo = string.Empty;
        else {
            echo += $"{message}\n";
            // Note. 
            // Does not update UI immediately in Unmanaged CallersOnly process
            await InvokeAsync(StateHasChanged);
        }
    }

    public void Dispose()
    {
        CallbackExperiment.Echo -= Echo;
    }
}